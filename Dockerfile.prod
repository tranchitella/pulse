# Stage 1: Build stage
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends gcc libc-dev && \
    rm -rf /var/lib/apt/lists/*

# Set the working directory
ENV APP_HOME=/app
WORKDIR $APP_HOME

# Copy the requirements file and install dependencies
COPY requirements-prod.txt $APP_HOME/requirements-prod.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /wheels -r requirements-prod.txt

# Stage 2: Runtime stage
FROM python:3.12-slim

# create the app user
RUN addgroup --system app && adduser --system --group app

# Set the working directory
ENV APP_HOME=/app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat-openbsd
COPY --from=builder /wheels /wheels
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# Copy the entrypoint   
COPY ./entrypoint.prod.sh /
RUN chmod +x /entrypoint.prod.sh

# Copy the Django application code
COPY ./manage.py $APP_HOME
COPY ./pulse $APP_HOME/pulse

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# Expose the port the app runs on
EXPOSE 8000

# Set the default command to run the application with gunicorn
ENTRYPOINT ["/entrypoint.prod.sh"]

name: Django CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  qa-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create virtual environment
        run: |
          python -m venv .venv

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run QA checks
        run: |
          source .venv/bin/activate
          make check-qa

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create virtual environment
        run: |
          python -m venv .venv

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django tests with coverage
        run: |
          source .venv/bin/activate
          export SQL_ENGINE=django.db.backends.sqlite3
          export SQL_NAME=$(pwd)/db.sqlite3
          export DEBUG=1
          coverage run manage.py test

      - name: Generate coverage report
        run: |
          source .venv/bin/activate
          coverage xml
          coverage report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: .coverage
